{"version":3,"file":"vue.js","sources":["../../src/observer/index.js","../../src/observer/proxy.js","../../src/init/initData.js","../../src/init/initState.js","../../src/template-compiler/index.js","../../src/init/init.js","../../src/index.js"],"sourcesContent":["// 传递过来的是data引用空间\r\nexport function observe(data) {\r\n\t// 只有对象才可以劫持 如果不是对象 那么不用劫持\r\n\tif (typeof data !== 'object' || data === null) return;\r\n\r\n\t// 如果一个对象的__ob__属性存在并且是Observer的实例 那么说明这个对象已经被观测过了\r\n\tif (data.__ob__ instanceof Observer) {\r\n\t\treturn data.__ob__;\r\n\t}\r\n\t// new Observer(data)函数调用的过程就是劫持data对象上属性的过程\r\n\treturn new Observer(data);\r\n}\r\n\r\n// 观测数组和对象的类\r\nclass Observer {\r\n\tconstructor(data) {\r\n\t\t// 让__ob__属性的可被遍历属性设置为false 避免被遍历到从而引起死循环\r\n\t\tObject.defineProperty(data, '__ob__', {\r\n\t\t\tvalue: this,\r\n\t\t\tenumrable: false,\r\n\t\t\tconfigurable: false\r\n\t\t})\r\n\r\n\t\tif (Array.isArray(data)) {\r\n\t\t\t// 会将数组的7个可修改自身的方法调用进行劫持\r\n\t\t\tlet newArrayProto = createNewArrayProto();\r\n\t\t\tdata.__proto__ = newArrayProto;\r\n\t\t\t\r\n\t\t\t// 会将数组中的对象的属性进行劫持\r\n\t\t\tthis.observeArray(data);\r\n\t\t} else {\r\n\t\t\tthis.walk(data);\r\n\t\t}\r\n\t}\r\n\r\n\t// 遍历对象 对属性依次进行劫持\r\n\twalk(data) {\r\n\t\tObject.keys(data).forEach(key => {\r\n\t\t\t// 单独定义  公共 方便导出 不放在类上 \r\n\t\t\tdefineReactive(data, key, data[key]);\r\n\t\t})\r\n\t}\r\n\r\n\t// 对数组中每一项进行观测\r\n\tobserveArray(data) {\r\n\t\tdata.forEach(item => {\r\n\t\t\tobserve(item);\r\n\t\t})\r\n\t}\r\n\r\n}\r\n\r\n\r\n/**\r\n * 把对象target上的所有属性重新定义成为响应式数据\r\n * 为什么不放在类Observer上，为的是将这个方法可以单独导出在其他地方使用\r\n */\r\nfunction defineReactive(target, key, value) {\r\n\t// 递归劫持 如果对象的属性值还是一个对象\r\n\tobserve(value);\r\n\t\r\n\tObject.defineProperty(target, key, {\r\n\t\t// 拦截取值操作\r\n\t\tget() {\r\n\t\t\tconsole.log('拦截取值操作', key, value);\r\n\t\t\treturn value;\r\n\t\t},\r\n\t\t// 拦截赋值操作\r\n\t\tset(newValue) {\r\n\t\t\tconsole.log('拦截存值操作', key, value);\r\n\t\t\tif (newValue === value) return;\r\n\r\n\t\t\t// 如果新赋的值是一个新的对象 还需要递归劫持\r\n\t\t\tobserve(newValue);\r\n\t\t\tvalue = newValue;\r\n\t\t\t\r\n\t\t}\r\n\t})\r\n}\r\n\r\n\r\nfunction createNewArrayProto() {\r\n\tlet oldArrayProto = Array.prototype;\r\n\t// 创建一个原型指向数组原型的空对象\r\n\tlet newArrayProto = Object.create(oldArrayProto);\r\n\r\n\t// 以下7个方法会改变原数组\r\n\tlet methods = [\r\n\t\t'push',\r\n\t\t'pop',\r\n\t\t'shift',\r\n\t\t'unshift',\r\n\t\t'sort',\r\n\t\t'reverse',\r\n\t\t'splice'\r\n\t]\r\n\r\n\tmethods.forEach(method => {\r\n\t\tnewArrayProto[method] = function(...args) {\r\n\t\t\t// console.log('监听到调用了数组方法', method);\r\n\t\t\tlet result = oldArrayProto[method].call(this, ...args);\r\n\r\n\t\t\t// 需要对操作数组方法的时候新增的数据 再次进行劫持\r\n\t\t\tlet inserted;\r\n\t\t\tswitch (method) {\r\n\t\t\t\tcase 'push':\r\n\t\t\t\tcase 'unshift':\r\n\t\t\t\t\tinserted = args;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'splice':\r\n\t\t\t\t\tinserted = args.slice(2);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\t// console.log('inserted', inserted);\r\n\r\n\t\t\tif (inserted) {\r\n\t\t\t\t// 对新增的内容再次进行劫持\r\n\t\t\t\tthis.__ob__.observeArray(inserted);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\t})\r\n\r\n\treturn newArrayProto;\r\n}\r\n","/**\r\n * @param {Object} vm Vue实例对象\r\n * @param {Object} target 要代理的vm上的目标对象_data = {}\r\n * @param {Object} key 目标对象的属性 name\r\n * 实现访问vm.name = 访问vm._data.name\r\n */\r\n export function proxy(vm, target, key) {\r\n\tObject.defineProperty(vm, key, {\r\n\t\tget() {\r\n\t\t\treturn vm[target][key];\r\n\t\t},\r\n\t\tset(newValue) {\r\n\t\t\tvm[target][key] = newValue;\r\n\t\t}\r\n\t})\r\n}","import {observe} from '../observer/index.js'\r\nimport {proxy} from '../observer/proxy.js'\r\n\r\n/**\r\n * 1. 获取数据\r\n * 2. 对获取到的data进行响应式处理\r\n */\r\nexport function initData(vm) {\r\n\r\n\tlet data = vm.$options.data;\r\n\t// data可能是函数可能是对象\r\n\tdata = typeof data === 'function' ? data.call(vm) : data;\r\n\r\n\t// 将要劫持的对象放在实例上 便于观测效果\r\n\tvm._data = data;\r\n\t\r\n\t// 对data数据进行响应式处理\r\n\tobserve(data);\r\n\r\n\t// 数据代理\r\n\tfor (let key in data) {\r\n\t\tproxy(vm, '_data', key);\r\n\t}\r\n\r\n}","import {initData} from './initData.js'\r\n\r\nexport function initState(vm) {\r\n\tlet options = vm.$options; // 获取用户传入的选项\r\n\t\r\n\t// 初始化的顺序应该是固定的\r\n\t\r\n\tif (options.props) {\r\n\t\tinitProps(vm);\r\n\t}\r\n\r\n\tif (options.data) {\r\n\t\tinitData(vm);\r\n\t}\r\n\r\n\tif (options.methods) {\r\n\t\t// initMethods(vm);\r\n\t}\r\n\r\n\tif (options.computed) {\r\n\t\tinitComputed(vm);\r\n\t}\r\n\r\n\tif (options.watch) {\r\n\t\tinitWatch(vm);\r\n\t}\r\n}\r\n","/**\r\n * \r\n * @param {String} templateString 模板字符串\r\n * @return {Function} render函数\r\n */\r\nexport function compileToFunction(templateString){\r\n    \r\n    /* \r\n        1. 模板编译第一步：解析HTML模板字符串templateString为AST抽象语法树\r\n    */\r\n\r\n\r\n    /* \r\n        2. 模板编译第二步：将AST抽象语法树生成带有_c、_v、_s的字符串\r\n    */\r\n\r\n\r\n    /* \r\n        3. 模板编译第三步：将字符串通过new Function生成render函数\r\n    */\r\n    \r\n}","import { initState } from \"./initState.js\";\r\nimport { compileToFunction } from \"../template-compiler/index.js\";\r\n\r\nexport function initMixin(Vue) {\r\n  /* 在这里给Vue原型拓展两个方法 */\r\n  Vue.prototype._init = function (options) {\r\n    // 给生成的实例上挂载$options用于在其他地方获取用户传入的配置\r\n    let vm = this;\r\n\r\n    // 将用户传入的options挂载到实例对象上 方便其他地方拿到\r\n    vm.$options = options;\r\n\r\n    // 开始初始化options中的各个状态 data - props - methods...\r\n    initState(vm);\r\n\r\n    if (options.el) {\r\n      vm.$mount(options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (elementSelector) {\r\n    let vm = this;\r\n    let options = vm.$options;\r\n    // 获取挂载的DOM元素节点\r\n    let element = document.querySelector(elementSelector);\r\n\r\n    /* \r\n\t\t\t编译模板优先级 render - template - el \r\n\t\t*/\r\n    if (!options.render) {\r\n      let templateString;\r\n\r\n      // 如果没有传递template属性但是有element\r\n      if (!options.template && element) {\r\n        templateString = element.outerHTML;\r\n      } else {\r\n        templateString = options.template;\r\n      }\r\n\r\n      // 确定template模板字符串，进行模板编译得到render函数\r\n      if (templateString) {\r\n        // 核心1：基于确定的模板字符串得到一个render函数\r\n        const render = compileToFunction(templateString);\r\n\t\t\r\n        // 核心2：将render函数挂载到options对象上\r\n        options.render = render;\r\n      }\r\n    }\r\n\r\n    // 模板挂载：将data对象中的值挂载到DOM元素上\r\n    // vm.$options中可以获取前面生成的render函数\r\n    // mountComponent(vm, element);\r\n  };\r\n}\r\n","/* 打包入口文件 */\r\nimport {\r\n\tinitMixin\r\n} from './init/init.js';\r\n\r\n\r\n\r\n// Vue构造函数\r\nfunction Vue(options) {\r\n\tthis._init(options);\r\n}\r\n\r\n\r\n// 给Vue类拓展初始化options的方法\r\ninitMixin(Vue);\r\n\r\n\r\n\r\n\r\nexport default Vue;\r\n"],"names":["observe","data","__ob__","Observer","Object","defineProperty","value","enumrable","configurable","Array","isArray","newArrayProto","createNewArrayProto","__proto__","observeArray","walk","keys","forEach","key","defineReactive","item","target","get","console","log","set","newValue","oldArrayProto","prototype","create","methods","method","args","result","call","inserted","slice","proxy","vm","initData","$options","_data","initState","options","props","initProps","computed","initComputed","watch","initWatch","compileToFunction","templateString","initMixin","Vue","_init","el","$mount","elementSelector","element","document","querySelector","render","template","outerHTML"],"mappings":"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"}